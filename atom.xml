<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孤梧笔记</title>
  
  
  <link href="http://www.duanxs.com/atom.xml" rel="self"/>
  
  <link href="http://www.duanxs.com/"/>
  <updated>2021-07-24T09:50:24.330Z</updated>
  <id>http://www.duanxs.com/</id>
  
  <author>
    <name>孤梧</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>简单工厂模式</title>
    <link href="http://www.duanxs.com/2021/07/20/designPattern/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.duanxs.com/2021/07/20/designPattern/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-07-20T12:35:42.000Z</published>
    <updated>2021-07-24T09:50:24.330Z</updated>
    
    <content type="html"><![CDATA[<p>简单工厂模式(Simple Factory Pattern)：又称为静态工厂方法(Static Factory Method)模式，它属于类创建型模式。在简单工厂模式中，可以根据参数的不同返回不同类的实例。简单工厂模式专门定义一个类来负责创建其他类的实例，被创建的实例通常都具有共同的父类。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Factory</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(name === <span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;A product&#x27;</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (name === <span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;B Product&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;简单工厂模式(Simple Factory Pattern)：又称为静态工厂方法(Static Factory Method)模式，它属于类创建型模式。在简单工厂模式中，可以根据参数的不同返回不同类的实例。简单工厂模式专门定义一个类来负责创建其他类的实例，被创建的实例通常都</summary>
      
    
    
    
    <category term="基础" scheme="http://www.duanxs.com/categories/%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="设计模式" scheme="http://www.duanxs.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="工厂模式" scheme="http://www.duanxs.com/tags/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Vue2 源码学习笔记-01-寻找入口</title>
    <link href="http://www.duanxs.com/2021/07/18/learnVue2Doc/01-%E9%A2%84%E5%A4%87/"/>
    <id>http://www.duanxs.com/2021/07/18/learnVue2Doc/01-%E9%A2%84%E5%A4%87/</id>
    <published>2021-07-18T10:55:32.000Z</published>
    <updated>2021-07-24T09:49:52.772Z</updated>
    
    <content type="html"><![CDATA[<p>古语云：眼过千遍不如手过一遍。边调试边学习代码，进步更快。</p><h2 id="预备"><a href="#预备" class="headerlink" title="预备"></a>预备</h2><h3 id="拉取官方代码"><a href="#拉取官方代码" class="headerlink" title="拉取官方代码"></a>拉取官方代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/vuejs/vue.git</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>打开 vue 目录，使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><figcaption><span>sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure><p>安装依赖。</p><h2 id="从-package-json-开始"><a href="#从-package-json-开始" class="headerlink" title="从 package.json 开始"></a>从 package.json 开始</h2><p>package.json 乃项目之根本，此文件涵盖项目的配置信息及其依赖包。</p><p>在 package.json 中，本次学习主要使用 <code>script</code> 字段中的 <code>dev</code> 命令:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;dev&quot;</span>: <span class="string">&quot;rollup -w -c scripts/config.js --environment TARGET:web-full-dev&quot;</span>,</span><br><span class="line"> ...</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>此命令使用 <code>rollup</code> 在 <code>/dist</code>  目录打包输出完整版的 <code>vue.js</code>。因打包后的 <code>vue.js</code> 时压缩过的，故而运行此命令前，需在命令中加上参数 <code>--sourcemap</code>，可同时生成名为 <code>vue.js.map</code> 的映射文件 ，以便调试时看到原始代码。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;dev&quot;</span>: <span class="string">&quot;rollup -w -c scripts/config.js --sourcemap --environment TARGET:web-full-dev&quot;</span>,</span><br><span class="line"> ...</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="寻找入口"><a href="#寻找入口" class="headerlink" title="寻找入口"></a>寻找入口</h2><p>在 Vue 项目中，首先会使用 <code>new Vue()</code> 创建 Vue 的实例，因此可直接编写案例打断点来找到 Vue 的构造函数。</p><p>另一种方法是通过 rollup 配置文件一步步找寻，但打断点更直截了当。</p><p>案例可以放在 <code>/examples</code> 目录下，便于集中管理：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /examples/test/init.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh_CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>寻找入口<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123;msg&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">msg</span>: <span class="string">&quot;hello vue&quot;</span></span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在浏览器中打开当前测试案例，在第 17 行打断点刷新并单步进入：</p><p><img src="/images/01/01-init-debugger.jpg" alt="01-init-debugger"></p><p>当前显示的即 Vue 构造函数所在文件：</p><p><img src="/images/01/02-show-directory.jpg" alt="02-show-directory"></p><p>若想定位当前文件在源码目录中的位置，可如上图，右键选择 <code>边栏中显示</code> 即可在左侧看到 Vue 构造函数在 <code>/src/core/instance/index.js</code>。 </p><hr><p>至此，入口已寻得。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;古语云：眼过千遍不如手过一遍。边调试边学习代码，进步更快。&lt;/p&gt;
&lt;h2 id=&quot;预备&quot;&gt;&lt;a href=&quot;#预备&quot; class=&quot;headerlink&quot; title=&quot;预备&quot;&gt;&lt;/a&gt;预备&lt;/h2&gt;&lt;h3 id=&quot;拉取官方代码&quot;&gt;&lt;a href=&quot;#拉取官方代码&quot; cl</summary>
      
    
    
    
    <category term="前端" scheme="http://www.duanxs.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue" scheme="http://www.duanxs.com/tags/Vue/"/>
    
    <category term="Vue 源码" scheme="http://www.duanxs.com/tags/Vue-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
</feed>
